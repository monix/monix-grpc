syntax = "proto3";

package scalapb.monix.grpc;

import "google/protobuf/empty.proto";

message Request {
    enum Scenario {
        OK = 0;
        ERROR_NOW = 1; // fail with an error
        ERROR_AFTER = 2; // for server streaming, error after two responses
        DELAY = 3; // do not return a response. for testing cancellations
        SLOW = 4; //delays the response by 10 milliseconds
        BACK_PRESSURE = 5; //delays the response by 10 milliseconds
    }
    Scenario scenario = 1;
    int32 backPressureResponses = 2;
    repeated double bulk = 3;
}

message Response {
    int32 out = 1;
    int64 timestamp = 2;
    repeated double bulk = 3;
}

service TestService {
    // Basic API
    rpc Unary(Request) returns (Response);
    rpc ServerStreaming(Request) returns (stream Response);
    rpc ClientStreaming(stream Request) returns (Response);
    rpc BidiStreaming(stream Request) returns (stream Response);

    // Numbers Pressure API
    rpc RequestPressure (stream Number) returns (Number) {}
    rpc ResponsePressure (google.protobuf.Empty) returns (stream Number) {}
    rpc TwoWayPressure (stream Number) returns (stream Number) {}
    rpc TwoWayRequestPressure (stream Number) returns (stream Number) {}
    rpc TwoWayResponsePressure (stream Number) returns (stream Number) {}
}

message Number {
    repeated int32 number = 1;
}